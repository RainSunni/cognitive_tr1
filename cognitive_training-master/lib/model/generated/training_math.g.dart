//This is autogenerated file. All changes will be lost after code generation.
import 'package:nsg_data/nsg_data.dart';
// ignore: unused_import
import 'dart:typed_data';
import '../data_controller_model.dart';

/// МатематическоеУпражнение
class TrainingMathGenerated extends NsgDataItem {
  static const nameId = 'id';
  static const nameDateEdited = 'dateEdited';
  static const nameName = 'name';
  static const nameComment = 'comment';
  static const nameUseAddition = 'useAddition';
  static const nameUseSubtraction = 'useSubtraction';
  static const nameUseMultiplication = 'useMultiplication';
  static const nameMinNumber = 'minNumber';
  static const nameMaxNumber = 'maxNumber';

  static final Map<String, String> fieldNameDict = {
  };

  @override
  String get typeName => 'TrainingMath';

  @override
  bool get isDistributed => true;

  @override
  void initialize() {
    addField(NsgDataStringField(nameId), primaryKey: true);
    addField(NsgDataDateField(nameDateEdited), primaryKey: false);
    addField(NsgDataStringField(nameName), primaryKey: false);
    addField(NsgDataStringField(nameComment, maxLength: 0), primaryKey: false);
    addField(NsgDataBoolField(nameUseAddition), primaryKey: false);
    addField(NsgDataBoolField(nameUseSubtraction), primaryKey: false);
    addField(NsgDataBoolField(nameUseMultiplication), primaryKey: false);
    addField(NsgDataIntField(nameMinNumber), primaryKey: false);
    addField(NsgDataIntField(nameMaxNumber), primaryKey: false);
  }

  @override
  String toString() => name;

  @override
  NsgDataItem getNewObject() => TrainingMath();

  /// Идентификатор
  @override
  String get id => getFieldValue(nameId).toString();

  @override
  set id(String value) => setFieldValue(nameId, value);

  /// ДатаПоследнегоИзменения
  DateTime get dateEdited => getFieldValue(nameDateEdited) as DateTime;

  set dateEdited(DateTime value) => setFieldValue(nameDateEdited, value);

  /// Имя
  String get name => getFieldValue(nameName).toString();

  set name(String value) => setFieldValue(nameName, value);

  /// Комментарий
  String get comment => getFieldValue(nameComment).toString();

  set comment(String value) => setFieldValue(nameComment, value);

  /// ИспользоватьСложение
  bool get useAddition => getFieldValue(nameUseAddition) as bool;

  set useAddition(bool value) => setFieldValue(nameUseAddition, value);

  /// ИспользоватьВычитание
  bool get useSubtraction => getFieldValue(nameUseSubtraction) as bool;

  set useSubtraction(bool value) => setFieldValue(nameUseSubtraction, value);

  /// ИспользоватьУмножение
  bool get useMultiplication => getFieldValue(nameUseMultiplication) as bool;

  set useMultiplication(bool value) => setFieldValue(nameUseMultiplication, value);

  /// МинимальноеЗначение
  int get minNumber => getFieldValue(nameMinNumber) as int;

  set minNumber(int value) => setFieldValue(nameMinNumber, value);

  /// МаксимальноеЗначение
  int get maxNumber => getFieldValue(nameMaxNumber) as int;

  set maxNumber(int value) => setFieldValue(nameMaxNumber, value);

  @override
  String get apiRequestItems {
    return '/Api/TrainingMath';
  }
}
